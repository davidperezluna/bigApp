{% extends 'base.html.twig' %}
{% block stylesheets %}
 <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      .controls {
        margin-top: 10px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 300px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
      #target {
        width: 345px;
      }
  </style>
{% endblock %} 

{% block body %}

<div class="container">
  <!-- BASIC INPUTS -->
  <div class="block">                        
      
      <div class="app-heading app-heading-small">                                
          <div class="title">
              <h2>Editar Empresa</h2>
              <p>Registre todos los datos de su empresa</p>
          </div>                                
      </div>
       {{ form_start(edit_form, {attr: {novalidate: 'novalidate'}}) }}
          <div class="form-group">
              <label class="col-md-2 control-label">Nombre</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.nombre, {'attr': {'class': 'form-control', 'placeholder':"Nombre"}}) }}
              </div>
          </div>
          <div class="form-group">
              <label class="col-md-2 control-label">Correo Electronico</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.correo, {'attr': {'class': 'form-control', 'placeholder':"Correo Electronico"}}) }}
              </div>
          </div>
           <div class="form-group">
              <label class="col-md-2 control-label">Telefono</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.telefono, {'attr': {'class': 'form-control', 'placeholder':"Telefono"}}) }}
              </div>
          </div>
           <div class="form-group">
              <label class="col-md-2 control-label">Celuar</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.celular, {'attr': {'class': 'form-control', 'placeholder':"Celuar"}}) }}
              </div>
          </div>
           <div class="form-group">
              <label class="col-md-2 control-label">Nit</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.nit, {'attr': {'class': 'form-control', 'placeholder':"Nit"}}) }}
              </div>
          </div>
          <div class="form-group">
              <label class="col-md-2 control-label">Foto Logo</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.fotoLogo,  {'attr': {'class': 'file btn-primary','title':'<span class="icon-download2"></span>Subir Imagen'}}) }}
              </div>
          </div> 
          <div class="form-group">
              <label class="col-md-2 control-label">Foto Portada</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.fotoPortada, {'attr': {'class': 'file btn-primary','title':'<span class="icon-download2"></span>Subir Imagen'}}) }}
              </div>
          </div>
          <div class="form-group">
              <label class="col-md-2 control-label">Url Pagina Web</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.paginaWeb, {'attr': {'class': 'form-control', 'placeholder':"Url Pagina Web"}}) }}
              </div>
          </div> 
          <div class="form-group">
              <label class="col-md-2 control-label">Direccion</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.direccion, {'attr': {'class': 'form-control', 'placeholder':"Direccion"}}) }}
              </div>
          </div> 
          <div class="form-group">
              <label class="col-md-2 control-label">Descripcion</label>
              <div class="col-md-10">
                  {{ form_widget(edit_form.descripcion, {'attr': {'class': 'form-control', 'placeholder':"Descripcion"}}) }}
              </div>
          </div> 
          <div class="form-group">
              <label class="col-md-2 control-label">Usuario</label>
              <div class="col-md-10">
                    {{ form_widget(edit_form.usuario, {'attr': {'class': 'bootstrap-select bs-select form-control'}}) }}
              </div>
          </div>
          <div class="form-group">
              <label class="col-md-2 control-label">Municipio</label>
              <div class="col-md-10">
                    {{ form_widget(edit_form.municipio, {'attr': {'class': 'bootstrap-select bs-select form-control'}}) }}
              </div>
          </div>
          <div class="container">
            <div class="form-group">                                                                        
                <div class="row">
                    <div class="col-md-6">
                        <label>Color Principal</label>
                        {{ form_widget(edit_form.colorPrimario, {'attr': {'class': 'form-control bs-colorpicker-lg'}}) }}
                    </div>
                    <div class="col-md-6">
                        <label>Color Secundario</label>
                        {{ form_widget(edit_form.colorSecundario, {'attr': {'class': 'form-control bs-colorpicker-lg'}}) }}
                    </div>
                </div>
            </div>
          </div>
          <div class="container">
            <div class="form-group">
              <div class="row">
                <div class="col-md-6 input-coordenada">
                    {{ form_widget(edit_form.lat, {'attr': {'class': 'form-control input-coordenada', 'placeholder':"Latitud"}}) }}
                </div>
                <div class="col-md-6 input-coordenada">
                    {{ form_widget(edit_form.lng, {'attr': {'class': 'form-control input-coordenada', 'placeholder':"Longitud"}}) }}
                </div>
              </div>
            </div>
          </div>
          <div class="pull-right">
              <hr>
               <a href="{{ path('empresa_index') }}" class="btn btn-default">Cancelar</a>
              <button type="submit" class="btn btn-primary btn-icon-fixed"><span class="icon-chevron-right-circle"></span> Registrar</button>
          </div>
          <input type="text" class="hidden" name="fotoLogoOld" value="{{fotoLogoOld}}">
          <input type="text" class="hidden" name="fotoPortadaOld" value="{{fotoPortadaOld}}">
      {{ form_end(edit_form) }}
  </div>
  <div class="row">
      <div class="col-md-12">
          <div class="block">                            
              <div class="app-heading app-heading-small">                                
                  <div class="title">
                      <h3>Seleccione un punto en mapa</h3>                                
                      <p>Para cargar las cordenadas de su empresa</p>
                  </div>                                
              </div>                                    
                <input id="pac-input" class="controls" type="text" placeholder="Buscar">
               <div style=" height: 400px;   width: 100%;" id="map"></div>
          </div>
      </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
{{parent()}}

<script>
       function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 1.2135254, lng: -77.2947321},
          zoom: 13,
          mapTypeId: 'roadmap'
        });

         google.maps.event.addListener(map, "click", function (event) {

            var latitude = event.latLng.lat();
            var longitude = event.latLng.lng();

            $('#appbundle_empresa_lat').val(latitude);
            $('#appbundle_empresa_lng').val(longitude);
            $('.input-coordenada').addClass("has-success");
        });

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBaMoL7ZEH0JlE31islrZ1ITcBlozmctYg&libraries=places&callback=initAutocomplete"
         async defer></script>
<!-- <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBaMoL7ZEH0JlE31islrZ1ITcBlozmctYg&callback=initMap"></script> -->
<script src="{{ asset('build/js/vendor/bootstrap-select/bootstrap-select.js') }}" type="text/javascript"></script>
<script src="{{ asset('build/js/vendor/nestable/jquery.nestable.js') }}" type="text/javascript"></script>
<script src="{{ asset('build/js/vendor/bootstrap-tagsinput/bootstrap-tagsinput.js') }}" type="text/javascript"></script>
<script src="{{ asset('build/js/vendor/bootstrap-colorpicker/bootstrap-colorpicker.min.js') }}" type="text/javascript"></script>
{% endblock %}
